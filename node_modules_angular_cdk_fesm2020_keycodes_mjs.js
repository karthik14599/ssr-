"use strict";
exports.id = "node_modules_angular_cdk_fesm2020_keycodes_mjs";
exports.ids = ["node_modules_angular_cdk_fesm2020_keycodes_mjs"];
exports.modules = {

/***/ 10321:
/*!*********************************************************!*\
  !*** ./node_modules/@angular/cdk/fesm2020/keycodes.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ A; },
/* harmony export */   ALT: function() { return /* binding */ ALT; },
/* harmony export */   APOSTROPHE: function() { return /* binding */ APOSTROPHE; },
/* harmony export */   AT_SIGN: function() { return /* binding */ AT_SIGN; },
/* harmony export */   B: function() { return /* binding */ B; },
/* harmony export */   BACKSLASH: function() { return /* binding */ BACKSLASH; },
/* harmony export */   BACKSPACE: function() { return /* binding */ BACKSPACE; },
/* harmony export */   C: function() { return /* binding */ C; },
/* harmony export */   CAPS_LOCK: function() { return /* binding */ CAPS_LOCK; },
/* harmony export */   CLOSE_SQUARE_BRACKET: function() { return /* binding */ CLOSE_SQUARE_BRACKET; },
/* harmony export */   COMMA: function() { return /* binding */ COMMA; },
/* harmony export */   CONTEXT_MENU: function() { return /* binding */ CONTEXT_MENU; },
/* harmony export */   CONTROL: function() { return /* binding */ CONTROL; },
/* harmony export */   D: function() { return /* binding */ D; },
/* harmony export */   DASH: function() { return /* binding */ DASH; },
/* harmony export */   DELETE: function() { return /* binding */ DELETE; },
/* harmony export */   DOWN_ARROW: function() { return /* binding */ DOWN_ARROW; },
/* harmony export */   E: function() { return /* binding */ E; },
/* harmony export */   EIGHT: function() { return /* binding */ EIGHT; },
/* harmony export */   END: function() { return /* binding */ END; },
/* harmony export */   ENTER: function() { return /* binding */ ENTER; },
/* harmony export */   EQUALS: function() { return /* binding */ EQUALS; },
/* harmony export */   ESCAPE: function() { return /* binding */ ESCAPE; },
/* harmony export */   F: function() { return /* binding */ F; },
/* harmony export */   F1: function() { return /* binding */ F1; },
/* harmony export */   F10: function() { return /* binding */ F10; },
/* harmony export */   F11: function() { return /* binding */ F11; },
/* harmony export */   F12: function() { return /* binding */ F12; },
/* harmony export */   F2: function() { return /* binding */ F2; },
/* harmony export */   F3: function() { return /* binding */ F3; },
/* harmony export */   F4: function() { return /* binding */ F4; },
/* harmony export */   F5: function() { return /* binding */ F5; },
/* harmony export */   F6: function() { return /* binding */ F6; },
/* harmony export */   F7: function() { return /* binding */ F7; },
/* harmony export */   F8: function() { return /* binding */ F8; },
/* harmony export */   F9: function() { return /* binding */ F9; },
/* harmony export */   FF_EQUALS: function() { return /* binding */ FF_EQUALS; },
/* harmony export */   FF_MINUS: function() { return /* binding */ FF_MINUS; },
/* harmony export */   FF_MUTE: function() { return /* binding */ FF_MUTE; },
/* harmony export */   FF_SEMICOLON: function() { return /* binding */ FF_SEMICOLON; },
/* harmony export */   FF_VOLUME_DOWN: function() { return /* binding */ FF_VOLUME_DOWN; },
/* harmony export */   FF_VOLUME_UP: function() { return /* binding */ FF_VOLUME_UP; },
/* harmony export */   FIRST_MEDIA: function() { return /* binding */ FIRST_MEDIA; },
/* harmony export */   FIVE: function() { return /* binding */ FIVE; },
/* harmony export */   FOUR: function() { return /* binding */ FOUR; },
/* harmony export */   G: function() { return /* binding */ G; },
/* harmony export */   H: function() { return /* binding */ H; },
/* harmony export */   HOME: function() { return /* binding */ HOME; },
/* harmony export */   I: function() { return /* binding */ I; },
/* harmony export */   INSERT: function() { return /* binding */ INSERT; },
/* harmony export */   J: function() { return /* binding */ J; },
/* harmony export */   K: function() { return /* binding */ K; },
/* harmony export */   L: function() { return /* binding */ L; },
/* harmony export */   LAST_MEDIA: function() { return /* binding */ LAST_MEDIA; },
/* harmony export */   LEFT_ARROW: function() { return /* binding */ LEFT_ARROW; },
/* harmony export */   M: function() { return /* binding */ M; },
/* harmony export */   MAC_ENTER: function() { return /* binding */ MAC_ENTER; },
/* harmony export */   MAC_META: function() { return /* binding */ MAC_META; },
/* harmony export */   MAC_WK_CMD_LEFT: function() { return /* binding */ MAC_WK_CMD_LEFT; },
/* harmony export */   MAC_WK_CMD_RIGHT: function() { return /* binding */ MAC_WK_CMD_RIGHT; },
/* harmony export */   META: function() { return /* binding */ META; },
/* harmony export */   MUTE: function() { return /* binding */ MUTE; },
/* harmony export */   N: function() { return /* binding */ N; },
/* harmony export */   NINE: function() { return /* binding */ NINE; },
/* harmony export */   NUMPAD_DIVIDE: function() { return /* binding */ NUMPAD_DIVIDE; },
/* harmony export */   NUMPAD_EIGHT: function() { return /* binding */ NUMPAD_EIGHT; },
/* harmony export */   NUMPAD_FIVE: function() { return /* binding */ NUMPAD_FIVE; },
/* harmony export */   NUMPAD_FOUR: function() { return /* binding */ NUMPAD_FOUR; },
/* harmony export */   NUMPAD_MINUS: function() { return /* binding */ NUMPAD_MINUS; },
/* harmony export */   NUMPAD_MULTIPLY: function() { return /* binding */ NUMPAD_MULTIPLY; },
/* harmony export */   NUMPAD_NINE: function() { return /* binding */ NUMPAD_NINE; },
/* harmony export */   NUMPAD_ONE: function() { return /* binding */ NUMPAD_ONE; },
/* harmony export */   NUMPAD_PERIOD: function() { return /* binding */ NUMPAD_PERIOD; },
/* harmony export */   NUMPAD_PLUS: function() { return /* binding */ NUMPAD_PLUS; },
/* harmony export */   NUMPAD_SEVEN: function() { return /* binding */ NUMPAD_SEVEN; },
/* harmony export */   NUMPAD_SIX: function() { return /* binding */ NUMPAD_SIX; },
/* harmony export */   NUMPAD_THREE: function() { return /* binding */ NUMPAD_THREE; },
/* harmony export */   NUMPAD_TWO: function() { return /* binding */ NUMPAD_TWO; },
/* harmony export */   NUMPAD_ZERO: function() { return /* binding */ NUMPAD_ZERO; },
/* harmony export */   NUM_CENTER: function() { return /* binding */ NUM_CENTER; },
/* harmony export */   NUM_LOCK: function() { return /* binding */ NUM_LOCK; },
/* harmony export */   O: function() { return /* binding */ O; },
/* harmony export */   ONE: function() { return /* binding */ ONE; },
/* harmony export */   OPEN_SQUARE_BRACKET: function() { return /* binding */ OPEN_SQUARE_BRACKET; },
/* harmony export */   P: function() { return /* binding */ P; },
/* harmony export */   PAGE_DOWN: function() { return /* binding */ PAGE_DOWN; },
/* harmony export */   PAGE_UP: function() { return /* binding */ PAGE_UP; },
/* harmony export */   PAUSE: function() { return /* binding */ PAUSE; },
/* harmony export */   PERIOD: function() { return /* binding */ PERIOD; },
/* harmony export */   PLUS_SIGN: function() { return /* binding */ PLUS_SIGN; },
/* harmony export */   PRINT_SCREEN: function() { return /* binding */ PRINT_SCREEN; },
/* harmony export */   Q: function() { return /* binding */ Q; },
/* harmony export */   QUESTION_MARK: function() { return /* binding */ QUESTION_MARK; },
/* harmony export */   R: function() { return /* binding */ R; },
/* harmony export */   RIGHT_ARROW: function() { return /* binding */ RIGHT_ARROW; },
/* harmony export */   S: function() { return /* binding */ S; },
/* harmony export */   SCROLL_LOCK: function() { return /* binding */ SCROLL_LOCK; },
/* harmony export */   SEMICOLON: function() { return /* binding */ SEMICOLON; },
/* harmony export */   SEVEN: function() { return /* binding */ SEVEN; },
/* harmony export */   SHIFT: function() { return /* binding */ SHIFT; },
/* harmony export */   SINGLE_QUOTE: function() { return /* binding */ SINGLE_QUOTE; },
/* harmony export */   SIX: function() { return /* binding */ SIX; },
/* harmony export */   SLASH: function() { return /* binding */ SLASH; },
/* harmony export */   SPACE: function() { return /* binding */ SPACE; },
/* harmony export */   T: function() { return /* binding */ T; },
/* harmony export */   TAB: function() { return /* binding */ TAB; },
/* harmony export */   THREE: function() { return /* binding */ THREE; },
/* harmony export */   TILDE: function() { return /* binding */ TILDE; },
/* harmony export */   TWO: function() { return /* binding */ TWO; },
/* harmony export */   U: function() { return /* binding */ U; },
/* harmony export */   UP_ARROW: function() { return /* binding */ UP_ARROW; },
/* harmony export */   V: function() { return /* binding */ V; },
/* harmony export */   VOLUME_DOWN: function() { return /* binding */ VOLUME_DOWN; },
/* harmony export */   VOLUME_UP: function() { return /* binding */ VOLUME_UP; },
/* harmony export */   W: function() { return /* binding */ W; },
/* harmony export */   X: function() { return /* binding */ X; },
/* harmony export */   Y: function() { return /* binding */ Y; },
/* harmony export */   Z: function() { return /* binding */ Z; },
/* harmony export */   ZERO: function() { return /* binding */ ZERO; },
/* harmony export */   hasModifierKey: function() { return /* binding */ hasModifierKey; }
/* harmony export */ });
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const MAC_ENTER = 3;
const BACKSPACE = 8;
const TAB = 9;
const NUM_CENTER = 12;
const ENTER = 13;
const SHIFT = 16;
const CONTROL = 17;
const ALT = 18;
const PAUSE = 19;
const CAPS_LOCK = 20;
const ESCAPE = 27;
const SPACE = 32;
const PAGE_UP = 33;
const PAGE_DOWN = 34;
const END = 35;
const HOME = 36;
const LEFT_ARROW = 37;
const UP_ARROW = 38;
const RIGHT_ARROW = 39;
const DOWN_ARROW = 40;
const PLUS_SIGN = 43;
const PRINT_SCREEN = 44;
const INSERT = 45;
const DELETE = 46;
const ZERO = 48;
const ONE = 49;
const TWO = 50;
const THREE = 51;
const FOUR = 52;
const FIVE = 53;
const SIX = 54;
const SEVEN = 55;
const EIGHT = 56;
const NINE = 57;
const FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186
const FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187
const QUESTION_MARK = 63;
const AT_SIGN = 64;
const A = 65;
const B = 66;
const C = 67;
const D = 68;
const E = 69;
const F = 70;
const G = 71;
const H = 72;
const I = 73;
const J = 74;
const K = 75;
const L = 76;
const M = 77;
const N = 78;
const O = 79;
const P = 80;
const Q = 81;
const R = 82;
const S = 83;
const T = 84;
const U = 85;
const V = 86;
const W = 87;
const X = 88;
const Y = 89;
const Z = 90;
const META = 91; // WIN_KEY_LEFT
const MAC_WK_CMD_LEFT = 91;
const MAC_WK_CMD_RIGHT = 93;
const CONTEXT_MENU = 93;
const NUMPAD_ZERO = 96;
const NUMPAD_ONE = 97;
const NUMPAD_TWO = 98;
const NUMPAD_THREE = 99;
const NUMPAD_FOUR = 100;
const NUMPAD_FIVE = 101;
const NUMPAD_SIX = 102;
const NUMPAD_SEVEN = 103;
const NUMPAD_EIGHT = 104;
const NUMPAD_NINE = 105;
const NUMPAD_MULTIPLY = 106;
const NUMPAD_PLUS = 107;
const NUMPAD_MINUS = 109;
const NUMPAD_PERIOD = 110;
const NUMPAD_DIVIDE = 111;
const F1 = 112;
const F2 = 113;
const F3 = 114;
const F4 = 115;
const F5 = 116;
const F6 = 117;
const F7 = 118;
const F8 = 119;
const F9 = 120;
const F10 = 121;
const F11 = 122;
const F12 = 123;
const NUM_LOCK = 144;
const SCROLL_LOCK = 145;
const FIRST_MEDIA = 166;
const FF_MINUS = 173;
const MUTE = 173; // Firefox (Gecko) fires 181 for MUTE
const VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN
const VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP
const FF_MUTE = 181;
const FF_VOLUME_DOWN = 182;
const LAST_MEDIA = 183;
const FF_VOLUME_UP = 183;
const SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON
const EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS
const COMMA = 188;
const DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS
const PERIOD = 190;
const SLASH = 191;
const APOSTROPHE = 192;
const TILDE = 192;
const OPEN_SQUARE_BRACKET = 219;
const BACKSLASH = 220;
const CLOSE_SQUARE_BRACKET = 221;
const SINGLE_QUOTE = 222;
const MAC_META = 224;

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Checks whether a modifier key is pressed.
 * @param event Event to be checked.
 */
function hasModifierKey(event, ...modifiers) {
  if (modifiers.length) {
    return modifiers.some(modifier => event[modifier]);
  }
  return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

};
;
//# sourceMappingURL=node_modules_angular_cdk_fesm2020_keycodes_mjs.js.map